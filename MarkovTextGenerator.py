import random

class MarkovTextGenerator:
    def __init__(self, input_text, order):
        self.input_text = input_text
        self.markov_model = {}
        self.build_markov_model(order)

    # generates the markov model that the class will use
    def build_markov_model(self, order):
        words = self.input_text.split()
        self.markov_model = {}

        for i in range(len(words) - order):
            state = tuple(words[i:i + order])
            next_state = words[i + order]

            if state not in self.markov_model:
                self.markov_model[state] = []

            self.markov_model[state].append(next_state)

    # select and return a random string of length max_length, generated by
    # attaching a random value selected from the built markov model
    def generate_text(self, order, max_length=30):
        output = []
        initial_state = random.choice(list(self.markov_model.keys()))
        output.extend(initial_state)

        for i in range(max_length):
            current_state = tuple(output[-order:])
            if current_state not in self.markov_model:
                break
            next_word = random.choice(self.markov_model[current_state])
            output.append(next_word)

        return " ".join(output)